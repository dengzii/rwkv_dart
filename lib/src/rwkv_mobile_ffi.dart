// AUTO GENERATED FILE, DO NOT EDIT.
//
// Generated by `package:ffigen`.
// ignore_for_file: type=lint
import 'dart:ffi' as ffi;

/// rwkv_mobile c_api.h in dart
class rwkv_mobile {
  /// Holds the symbol lookup function.
  final ffi.Pointer<T> Function<T extends ffi.NativeType>(String symbolName) _lookup;

  /// The symbols are looked up in [dynamicLibrary].
  rwkv_mobile(ffi.DynamicLibrary dynamicLibrary) : _lookup = dynamicLibrary.lookup;

  /// The symbols are looked up with [lookup].
  rwkv_mobile.fromLookup(ffi.Pointer<T> Function<T extends ffi.NativeType>(String symbolName) lookup) : _lookup = lookup;

  int rwkvmobile_runtime_get_available_backend_names(
      ffi.Pointer<ffi.Char> backend_names_buffer,
      int buffer_size,
      ) {
    return _rwkvmobile_runtime_get_available_backend_names(
      backend_names_buffer,
      buffer_size,
    );
  }

  late final _rwkvmobile_runtime_get_available_backend_namesPtr =
  _lookup<ffi.NativeFunction<ffi.Int Function(ffi.Pointer<ffi.Char>, ffi.Int)>>('rwkvmobile_runtime_get_available_backend_names');
  late final _rwkvmobile_runtime_get_available_backend_names = _rwkvmobile_runtime_get_available_backend_namesPtr
      .asFunction<int Function(ffi.Pointer<ffi.Char>, int)>();

  rwkvmobile_runtime_t rwkvmobile_runtime_init() {
    return _rwkvmobile_runtime_init();
  }

  late final _rwkvmobile_runtime_initPtr = _lookup<ffi.NativeFunction<rwkvmobile_runtime_t Function()>>('rwkvmobile_runtime_init');
  late final _rwkvmobile_runtime_init = _rwkvmobile_runtime_initPtr.asFunction<rwkvmobile_runtime_t Function()>();

  int rwkvmobile_runtime_release(
      rwkvmobile_runtime_t runtime,
      ) {
    return _rwkvmobile_runtime_release(
      runtime,
    );
  }

  late final _rwkvmobile_runtime_releasePtr = _lookup<ffi.NativeFunction<ffi.Int Function(rwkvmobile_runtime_t)>>(
    'rwkvmobile_runtime_release',
  );
  late final _rwkvmobile_runtime_release = _rwkvmobile_runtime_releasePtr.asFunction<int Function(rwkvmobile_runtime_t)>();

  int rwkvmobile_runtime_load_model(
      rwkvmobile_runtime_t runtime,
      ffi.Pointer<ffi.Char> model_path,
      ffi.Pointer<ffi.Char> backend_name,
      ffi.Pointer<ffi.Char> tokenizer_path,
      ) {
    return _rwkvmobile_runtime_load_model(
      runtime,
      model_path,
      backend_name,
      tokenizer_path,
    );
  }

  late final _rwkvmobile_runtime_load_modelPtr =
  _lookup<
      ffi.NativeFunction<ffi.Int Function(rwkvmobile_runtime_t, ffi.Pointer<ffi.Char>, ffi.Pointer<ffi.Char>, ffi.Pointer<ffi.Char>)>
  >('rwkvmobile_runtime_load_model');
  late final _rwkvmobile_runtime_load_model = _rwkvmobile_runtime_load_modelPtr
      .asFunction<int Function(rwkvmobile_runtime_t, ffi.Pointer<ffi.Char>, ffi.Pointer<ffi.Char>, ffi.Pointer<ffi.Char>)>();

  int rwkvmobile_runtime_load_model_with_extra(
      rwkvmobile_runtime_t runtime,
      ffi.Pointer<ffi.Char> model_path,
      ffi.Pointer<ffi.Char> backend_name,
      ffi.Pointer<ffi.Char> tokenizer_path,
      ffi.Pointer<ffi.Void> extra,
      ) {
    return _rwkvmobile_runtime_load_model_with_extra(
      runtime,
      model_path,
      backend_name,
      tokenizer_path,
      extra,
    );
  }

  late final _rwkvmobile_runtime_load_model_with_extraPtr =
  _lookup<
      ffi.NativeFunction<
          ffi.Int Function(rwkvmobile_runtime_t, ffi.Pointer<ffi.Char>, ffi.Pointer<ffi.Char>, ffi.Pointer<ffi.Char>, ffi.Pointer<ffi.Void>)
      >
  >('rwkvmobile_runtime_load_model_with_extra');
  late final _rwkvmobile_runtime_load_model_with_extra = _rwkvmobile_runtime_load_model_with_extraPtr
      .asFunction<
      int Function(rwkvmobile_runtime_t, ffi.Pointer<ffi.Char>, ffi.Pointer<ffi.Char>, ffi.Pointer<ffi.Char>, ffi.Pointer<ffi.Void>)
  >();

  int rwkvmobile_runtime_release_model(
      rwkvmobile_runtime_t runtime,
      int model_id,
      ) {
    return _rwkvmobile_runtime_release_model(
      runtime,
      model_id,
    );
  }

  late final _rwkvmobile_runtime_release_modelPtr = _lookup<ffi.NativeFunction<ffi.Int Function(rwkvmobile_runtime_t, ffi.Int)>>(
    'rwkvmobile_runtime_release_model',
  );
  late final _rwkvmobile_runtime_release_model = _rwkvmobile_runtime_release_modelPtr.asFunction<int Function(rwkvmobile_runtime_t, int)>();

  int rwkvmobile_runtime_eval_logits(
      rwkvmobile_runtime_t runtime,
      int model_id,
      ffi.Pointer<ffi.Int> ids,
      int ids_len,
      ffi.Pointer<ffi.Float> logits,
      int logits_len,
      ) {
    return _rwkvmobile_runtime_eval_logits(
      runtime,
      model_id,
      ids,
      ids_len,
      logits,
      logits_len,
    );
  }

  late final _rwkvmobile_runtime_eval_logitsPtr =
  _lookup<
      ffi.NativeFunction<ffi.Int Function(rwkvmobile_runtime_t, ffi.Int, ffi.Pointer<ffi.Int>, ffi.Int, ffi.Pointer<ffi.Float>, ffi.Int)>
  >('rwkvmobile_runtime_eval_logits');
  late final _rwkvmobile_runtime_eval_logits = _rwkvmobile_runtime_eval_logitsPtr
      .asFunction<int Function(rwkvmobile_runtime_t, int, ffi.Pointer<ffi.Int>, int, ffi.Pointer<ffi.Float>, int)>();

  int rwkvmobile_runtime_eval_chat_with_history_async(
      rwkvmobile_runtime_t handle,
      int model_id,
      ffi.Pointer<ffi.Pointer<ffi.Char>> inputs,
      int num_inputs,
      int max_tokens,
      ffi.Pointer<ffi.NativeFunction<ffi.Void Function(ffi.Pointer<ffi.Char>, ffi.Int, ffi.Pointer<ffi.Char>)>> callback,
      int enable_reasoning,
      ) {
    return _rwkvmobile_runtime_eval_chat_with_history_async(
      handle,
      model_id,
      inputs,
      num_inputs,
      max_tokens,
      callback,
      enable_reasoning,
    );
  }

  late final _rwkvmobile_runtime_eval_chat_with_history_asyncPtr =
  _lookup<
      ffi.NativeFunction<
          ffi.Int Function(
              rwkvmobile_runtime_t,
              ffi.Int,
              ffi.Pointer<ffi.Pointer<ffi.Char>>,
              ffi.Int,
              ffi.Int,
              ffi.Pointer<ffi.NativeFunction<ffi.Void Function(ffi.Pointer<ffi.Char>, ffi.Int, ffi.Pointer<ffi.Char>)>>,
              ffi.Int,
              )
      >
  >('rwkvmobile_runtime_eval_chat_with_history_async');
  late final _rwkvmobile_runtime_eval_chat_with_history_async = _rwkvmobile_runtime_eval_chat_with_history_asyncPtr
      .asFunction<
      int Function(
          rwkvmobile_runtime_t,
          int,
          ffi.Pointer<ffi.Pointer<ffi.Char>>,
          int,
          int,
          ffi.Pointer<ffi.NativeFunction<ffi.Void Function(ffi.Pointer<ffi.Char>, ffi.Int, ffi.Pointer<ffi.Char>)>>,
          int,
          )
  >();

  int rwkvmobile_runtime_stop_generation(
      rwkvmobile_runtime_t runtime,
      int model_id,
      ) {
    return _rwkvmobile_runtime_stop_generation(
      runtime,
      model_id,
    );
  }

  late final _rwkvmobile_runtime_stop_generationPtr = _lookup<ffi.NativeFunction<ffi.Int Function(rwkvmobile_runtime_t, ffi.Int)>>(
    'rwkvmobile_runtime_stop_generation',
  );
  late final _rwkvmobile_runtime_stop_generation = _rwkvmobile_runtime_stop_generationPtr
      .asFunction<int Function(rwkvmobile_runtime_t, int)>();

  int rwkvmobile_runtime_is_generating(
      rwkvmobile_runtime_t runtime,
      int model_id,
      ) {
    return _rwkvmobile_runtime_is_generating(
      runtime,
      model_id,
    );
  }

  late final _rwkvmobile_runtime_is_generatingPtr = _lookup<ffi.NativeFunction<ffi.Int Function(rwkvmobile_runtime_t, ffi.Int)>>(
    'rwkvmobile_runtime_is_generating',
  );
  late final _rwkvmobile_runtime_is_generating = _rwkvmobile_runtime_is_generatingPtr.asFunction<int Function(rwkvmobile_runtime_t, int)>();

  int rwkvmobile_runtime_set_prompt(
      rwkvmobile_runtime_t runtime,
      int model_id,
      ffi.Pointer<ffi.Char> prompt,
      ) {
    return _rwkvmobile_runtime_set_prompt(
      runtime,
      model_id,
      prompt,
    );
  }

  late final _rwkvmobile_runtime_set_promptPtr =
  _lookup<ffi.NativeFunction<ffi.Int Function(rwkvmobile_runtime_t, ffi.Int, ffi.Pointer<ffi.Char>)>>('rwkvmobile_runtime_set_prompt');
  late final _rwkvmobile_runtime_set_prompt = _rwkvmobile_runtime_set_promptPtr
      .asFunction<int Function(rwkvmobile_runtime_t, int, ffi.Pointer<ffi.Char>)>();

  int rwkvmobile_runtime_get_prompt(
      rwkvmobile_runtime_t runtime,
      int model_id,
      ffi.Pointer<ffi.Char> prompt,
      int buf_len,
      ) {
    return _rwkvmobile_runtime_get_prompt(
      runtime,
      model_id,
      prompt,
      buf_len,
    );
  }

  late final _rwkvmobile_runtime_get_promptPtr =
  _lookup<ffi.NativeFunction<ffi.Int Function(rwkvmobile_runtime_t, ffi.Int, ffi.Pointer<ffi.Char>, ffi.Int)>>(
    'rwkvmobile_runtime_get_prompt',
  );
  late final _rwkvmobile_runtime_get_prompt = _rwkvmobile_runtime_get_promptPtr
      .asFunction<int Function(rwkvmobile_runtime_t, int, ffi.Pointer<ffi.Char>, int)>();

  int rwkvmobile_runtime_gen_completion_async(
      rwkvmobile_runtime_t runtime,
      int model_id,
      ffi.Pointer<ffi.Char> prompt,
      int max_tokens,
      int stop_code,
      ffi.Pointer<ffi.NativeFunction<ffi.Void Function(ffi.Pointer<ffi.Char>, ffi.Int, ffi.Pointer<ffi.Char>)>> callback,
      ) {
    return _rwkvmobile_runtime_gen_completion_async(
      runtime,
      model_id,
      prompt,
      max_tokens,
      stop_code,
      callback,
    );
  }

  late final _rwkvmobile_runtime_gen_completion_asyncPtr =
  _lookup<
      ffi.NativeFunction<
          ffi.Int Function(
              rwkvmobile_runtime_t,
              ffi.Int,
              ffi.Pointer<ffi.Char>,
              ffi.Int,
              ffi.Int,
              ffi.Pointer<ffi.NativeFunction<ffi.Void Function(ffi.Pointer<ffi.Char>, ffi.Int, ffi.Pointer<ffi.Char>)>>,
              )
      >
  >('rwkvmobile_runtime_gen_completion_async');
  late final _rwkvmobile_runtime_gen_completion_async = _rwkvmobile_runtime_gen_completion_asyncPtr
      .asFunction<
      int Function(
          rwkvmobile_runtime_t,
          int,
          ffi.Pointer<ffi.Char>,
          int,
          int,
          ffi.Pointer<ffi.NativeFunction<ffi.Void Function(ffi.Pointer<ffi.Char>, ffi.Int, ffi.Pointer<ffi.Char>)>>,
          )
  >();

  int rwkvmobile_runtime_gen_completion_batch_async(
      rwkvmobile_runtime_t runtime,
      int model_id,
      ffi.Pointer<ffi.Pointer<ffi.Char>> prompts,
      int batch_size,
      int max_tokens,
      int stop_code,
      ffi.Pointer<
          ffi.NativeFunction<
              ffi.Void Function(ffi.Int, ffi.Pointer<ffi.Pointer<ffi.Char>>, ffi.Pointer<ffi.Int>, ffi.Pointer<ffi.Pointer<ffi.Char>>)
          >
      >
      callback_batch,
      ) {
    return _rwkvmobile_runtime_gen_completion_batch_async(
      runtime,
      model_id,
      prompts,
      batch_size,
      max_tokens,
      stop_code,
      callback_batch,
    );
  }

  late final _rwkvmobile_runtime_gen_completion_batch_asyncPtr =
  _lookup<
      ffi.NativeFunction<
          ffi.Int Function(
              rwkvmobile_runtime_t,
              ffi.Int,
              ffi.Pointer<ffi.Pointer<ffi.Char>>,
              ffi.Int,
              ffi.Int,
              ffi.Int,
              ffi.Pointer<
                  ffi.NativeFunction<
                      ffi.Void Function(ffi.Int, ffi.Pointer<ffi.Pointer<ffi.Char>>, ffi.Pointer<ffi.Int>, ffi.Pointer<ffi.Pointer<ffi.Char>>)
                  >
              >,
              )
      >
  >('rwkvmobile_runtime_gen_completion_batch_async');
  late final _rwkvmobile_runtime_gen_completion_batch_async = _rwkvmobile_runtime_gen_completion_batch_asyncPtr
      .asFunction<
      int Function(
          rwkvmobile_runtime_t,
          int,
          ffi.Pointer<ffi.Pointer<ffi.Char>>,
          int,
          int,
          int,
          ffi.Pointer<
              ffi.NativeFunction<
                  ffi.Void Function(ffi.Int, ffi.Pointer<ffi.Pointer<ffi.Char>>, ffi.Pointer<ffi.Int>, ffi.Pointer<ffi.Pointer<ffi.Char>>)
              >
          >,
          )
  >();

  int rwkvmobile_runtime_eval_chat_batch_with_history_async(
      rwkvmobile_runtime_t handle,
      int model_id,
      ffi.Pointer<ffi.Pointer<ffi.Pointer<ffi.Char>>> inputs,
      ffi.Pointer<ffi.Int> num_inputs,
      int batch_size,
      int max_tokens,
      ffi.Pointer<
          ffi.NativeFunction<
              ffi.Void Function(ffi.Int, ffi.Pointer<ffi.Pointer<ffi.Char>>, ffi.Pointer<ffi.Int>, ffi.Pointer<ffi.Pointer<ffi.Char>>)
          >
      >
      callback_batch,
      int enable_reasoning,
      ) {
    return _rwkvmobile_runtime_eval_chat_batch_with_history_async(
      handle,
      model_id,
      inputs,
      num_inputs,
      batch_size,
      max_tokens,
      callback_batch,
      enable_reasoning,
    );
  }

  late final _rwkvmobile_runtime_eval_chat_batch_with_history_asyncPtr =
  _lookup<
      ffi.NativeFunction<
          ffi.Int Function(
              rwkvmobile_runtime_t,
              ffi.Int,
              ffi.Pointer<ffi.Pointer<ffi.Pointer<ffi.Char>>>,
              ffi.Pointer<ffi.Int>,
              ffi.Int,
              ffi.Int,
              ffi.Pointer<
                  ffi.NativeFunction<
                      ffi.Void Function(ffi.Int, ffi.Pointer<ffi.Pointer<ffi.Char>>, ffi.Pointer<ffi.Int>, ffi.Pointer<ffi.Pointer<ffi.Char>>)
                  >
              >,
              ffi.Int,
              )
      >
  >('rwkvmobile_runtime_eval_chat_batch_with_history_async');
  late final _rwkvmobile_runtime_eval_chat_batch_with_history_async = _rwkvmobile_runtime_eval_chat_batch_with_history_asyncPtr
      .asFunction<
      int Function(
          rwkvmobile_runtime_t,
          int,
          ffi.Pointer<ffi.Pointer<ffi.Pointer<ffi.Char>>>,
          ffi.Pointer<ffi.Int>,
          int,
          int,
          ffi.Pointer<
              ffi.NativeFunction<
                  ffi.Void Function(ffi.Int, ffi.Pointer<ffi.Pointer<ffi.Char>>, ffi.Pointer<ffi.Int>, ffi.Pointer<ffi.Pointer<ffi.Char>>)
              >
          >,
          int,
          )
  >();

  supported_batch_sizes rwkvmobile_runtime_get_supported_batch_sizes(
      rwkvmobile_runtime_t runtime,
      int model_id,
      ) {
    return _rwkvmobile_runtime_get_supported_batch_sizes(
      runtime,
      model_id,
    );
  }

  late final _rwkvmobile_runtime_get_supported_batch_sizesPtr =
  _lookup<ffi.NativeFunction<supported_batch_sizes Function(rwkvmobile_runtime_t, ffi.Int)>>(
    'rwkvmobile_runtime_get_supported_batch_sizes',
  );
  late final _rwkvmobile_runtime_get_supported_batch_sizes = _rwkvmobile_runtime_get_supported_batch_sizesPtr
      .asFunction<supported_batch_sizes Function(rwkvmobile_runtime_t, int)>();

  void rwkvmobile_runtime_free_supported_batch_sizes(
      supported_batch_sizes sizes,
      ) {
    return _rwkvmobile_runtime_free_supported_batch_sizes(
      sizes,
    );
  }

  late final _rwkvmobile_runtime_free_supported_batch_sizesPtr = _lookup<ffi.NativeFunction<ffi.Void Function(supported_batch_sizes)>>(
    'rwkvmobile_runtime_free_supported_batch_sizes',
  );
  late final _rwkvmobile_runtime_free_supported_batch_sizes = _rwkvmobile_runtime_free_supported_batch_sizesPtr
      .asFunction<void Function(supported_batch_sizes)>();

  int rwkvmobile_runtime_gen_completion(
      rwkvmobile_runtime_t runtime,
      int model_id,
      ffi.Pointer<ffi.Char> prompt,
      int max_tokens,
      int stop_code,
      ffi.Pointer<ffi.NativeFunction<ffi.Void Function(ffi.Pointer<ffi.Char>, ffi.Int, ffi.Pointer<ffi.Char>)>> callback,
      ) {
    return _rwkvmobile_runtime_gen_completion(
      runtime,
      model_id,
      prompt,
      max_tokens,
      stop_code,
      callback,
    );
  }

  late final _rwkvmobile_runtime_gen_completionPtr =
  _lookup<
      ffi.NativeFunction<
          ffi.Int Function(
              rwkvmobile_runtime_t,
              ffi.Int,
              ffi.Pointer<ffi.Char>,
              ffi.Int,
              ffi.Int,
              ffi.Pointer<ffi.NativeFunction<ffi.Void Function(ffi.Pointer<ffi.Char>, ffi.Int, ffi.Pointer<ffi.Char>)>>,
              )
      >
  >('rwkvmobile_runtime_gen_completion');
  late final _rwkvmobile_runtime_gen_completion = _rwkvmobile_runtime_gen_completionPtr
      .asFunction<
      int Function(
          rwkvmobile_runtime_t,
          int,
          ffi.Pointer<ffi.Char>,
          int,
          int,
          ffi.Pointer<ffi.NativeFunction<ffi.Void Function(ffi.Pointer<ffi.Char>, ffi.Int, ffi.Pointer<ffi.Char>)>>,
          )
  >();

  int rwkvmobile_runtime_clear_state(
      rwkvmobile_runtime_t runtime,
      int model_id,
      ) {
    return _rwkvmobile_runtime_clear_state(
      runtime,
      model_id,
    );
  }

  late final _rwkvmobile_runtime_clear_statePtr = _lookup<ffi.NativeFunction<ffi.Int Function(rwkvmobile_runtime_t, ffi.Int)>>(
    'rwkvmobile_runtime_clear_state',
  );
  late final _rwkvmobile_runtime_clear_state = _rwkvmobile_runtime_clear_statePtr.asFunction<int Function(rwkvmobile_runtime_t, int)>();

  int rwkvmobile_runtime_load_initial_state(
      rwkvmobile_runtime_t runtime,
      int model_id,
      ffi.Pointer<ffi.Char> state_path,
      ) {
    return _rwkvmobile_runtime_load_initial_state(
      runtime,
      model_id,
      state_path,
    );
  }

  late final _rwkvmobile_runtime_load_initial_statePtr =
  _lookup<ffi.NativeFunction<ffi.Int Function(rwkvmobile_runtime_t, ffi.Int, ffi.Pointer<ffi.Char>)>>(
    'rwkvmobile_runtime_load_initial_state',
  );
  late final _rwkvmobile_runtime_load_initial_state = _rwkvmobile_runtime_load_initial_statePtr
      .asFunction<int Function(rwkvmobile_runtime_t, int, ffi.Pointer<ffi.Char>)>();

  void rwkvmobile_runtime_unload_initial_state(
      rwkvmobile_runtime_t runtime,
      int model_id,
      ffi.Pointer<ffi.Char> state_path,
      ) {
    return _rwkvmobile_runtime_unload_initial_state(
      runtime,
      model_id,
      state_path,
    );
  }

  late final _rwkvmobile_runtime_unload_initial_statePtr =
  _lookup<ffi.NativeFunction<ffi.Void Function(rwkvmobile_runtime_t, ffi.Int, ffi.Pointer<ffi.Char>)>>(
    'rwkvmobile_runtime_unload_initial_state',
  );
  late final _rwkvmobile_runtime_unload_initial_state = _rwkvmobile_runtime_unload_initial_statePtr
      .asFunction<void Function(rwkvmobile_runtime_t, int, ffi.Pointer<ffi.Char>)>();

  int rwkvmobile_runtime_save_history_to_state(
      rwkvmobile_runtime_t runtime,
      int model_id,
      ffi.Pointer<ffi.Pointer<ffi.Char>> history,
      int num_history,
      ffi.Pointer<ffi.Char> state_path,
      ) {
    return _rwkvmobile_runtime_save_history_to_state(
      runtime,
      model_id,
      history,
      num_history,
      state_path,
    );
  }

  late final _rwkvmobile_runtime_save_history_to_statePtr =
  _lookup<
      ffi.NativeFunction<
          ffi.Int Function(rwkvmobile_runtime_t, ffi.Int, ffi.Pointer<ffi.Pointer<ffi.Char>>, ffi.Int, ffi.Pointer<ffi.Char>)
      >
  >('rwkvmobile_runtime_save_history_to_state');
  late final _rwkvmobile_runtime_save_history_to_state = _rwkvmobile_runtime_save_history_to_statePtr
      .asFunction<int Function(rwkvmobile_runtime_t, int, ffi.Pointer<ffi.Pointer<ffi.Char>>, int, ffi.Pointer<ffi.Char>)>();

  int rwkvmobile_runtime_load_history_state_to_memory(
      rwkvmobile_runtime_t runtime,
      int model_id,
      ffi.Pointer<ffi.Char> state_path,
      ) {
    return _rwkvmobile_runtime_load_history_state_to_memory(
      runtime,
      model_id,
      state_path,
    );
  }

  late final _rwkvmobile_runtime_load_history_state_to_memoryPtr =
  _lookup<ffi.NativeFunction<ffi.Int Function(rwkvmobile_runtime_t, ffi.Int, ffi.Pointer<ffi.Char>)>>(
    'rwkvmobile_runtime_load_history_state_to_memory',
  );
  late final _rwkvmobile_runtime_load_history_state_to_memory = _rwkvmobile_runtime_load_history_state_to_memoryPtr
      .asFunction<int Function(rwkvmobile_runtime_t, int, ffi.Pointer<ffi.Char>)>();

  sampler_params rwkvmobile_runtime_get_sampler_params(
      rwkvmobile_runtime_t runtime,
      int model_id,
      ) {
    return _rwkvmobile_runtime_get_sampler_params(
      runtime,
      model_id,
    );
  }

  late final _rwkvmobile_runtime_get_sampler_paramsPtr =
  _lookup<ffi.NativeFunction<sampler_params Function(rwkvmobile_runtime_t, ffi.Int)>>('rwkvmobile_runtime_get_sampler_params');
  late final _rwkvmobile_runtime_get_sampler_params = _rwkvmobile_runtime_get_sampler_paramsPtr
      .asFunction<sampler_params Function(rwkvmobile_runtime_t, int)>();

  void rwkvmobile_runtime_set_sampler_params(
      rwkvmobile_runtime_t runtime,
      int model_id,
      sampler_params params,
      ) {
    return _rwkvmobile_runtime_set_sampler_params(
      runtime,
      model_id,
      params,
    );
  }

  late final _rwkvmobile_runtime_set_sampler_paramsPtr =
  _lookup<ffi.NativeFunction<ffi.Void Function(rwkvmobile_runtime_t, ffi.Int, sampler_params)>>(
    'rwkvmobile_runtime_set_sampler_params',
  );
  late final _rwkvmobile_runtime_set_sampler_params = _rwkvmobile_runtime_set_sampler_paramsPtr
      .asFunction<void Function(rwkvmobile_runtime_t, int, sampler_params)>();

  penalty_params rwkvmobile_runtime_get_penalty_params(
      rwkvmobile_runtime_t runtime,
      int model_id,
      ) {
    return _rwkvmobile_runtime_get_penalty_params(
      runtime,
      model_id,
    );
  }

  late final _rwkvmobile_runtime_get_penalty_paramsPtr =
  _lookup<ffi.NativeFunction<penalty_params Function(rwkvmobile_runtime_t, ffi.Int)>>('rwkvmobile_runtime_get_penalty_params');
  late final _rwkvmobile_runtime_get_penalty_params = _rwkvmobile_runtime_get_penalty_paramsPtr
      .asFunction<penalty_params Function(rwkvmobile_runtime_t, int)>();

  void rwkvmobile_runtime_set_penalty_params(
      rwkvmobile_runtime_t runtime,
      int model_id,
      penalty_params params,
      ) {
    return _rwkvmobile_runtime_set_penalty_params(
      runtime,
      model_id,
      params,
    );
  }

  late final _rwkvmobile_runtime_set_penalty_paramsPtr =
  _lookup<ffi.NativeFunction<ffi.Void Function(rwkvmobile_runtime_t, ffi.Int, penalty_params)>>(
    'rwkvmobile_runtime_set_penalty_params',
  );
  late final _rwkvmobile_runtime_set_penalty_params = _rwkvmobile_runtime_set_penalty_paramsPtr
      .asFunction<void Function(rwkvmobile_runtime_t, int, penalty_params)>();

  void rwkvmobile_runtime_add_adsp_library_path(
      ffi.Pointer<ffi.Char> path,
      ) {
    return _rwkvmobile_runtime_add_adsp_library_path(
      path,
    );
  }

  late final _rwkvmobile_runtime_add_adsp_library_pathPtr = _lookup<ffi.NativeFunction<ffi.Void Function(ffi.Pointer<ffi.Char>)>>(
    'rwkvmobile_runtime_add_adsp_library_path',
  );
  late final _rwkvmobile_runtime_add_adsp_library_path = _rwkvmobile_runtime_add_adsp_library_pathPtr
      .asFunction<void Function(ffi.Pointer<ffi.Char>)>();

  void rwkvmobile_runtime_set_qnn_library_path(
      rwkvmobile_runtime_t runtime,
      ffi.Pointer<ffi.Char> path,
      ) {
    return _rwkvmobile_runtime_set_qnn_library_path(
      runtime,
      path,
    );
  }

  late final _rwkvmobile_runtime_set_qnn_library_pathPtr =
  _lookup<ffi.NativeFunction<ffi.Void Function(rwkvmobile_runtime_t, ffi.Pointer<ffi.Char>)>>(
    'rwkvmobile_runtime_set_qnn_library_path',
  );
  late final _rwkvmobile_runtime_set_qnn_library_path = _rwkvmobile_runtime_set_qnn_library_pathPtr
      .asFunction<void Function(rwkvmobile_runtime_t, ffi.Pointer<ffi.Char>)>();

  double rwkvmobile_runtime_get_avg_decode_speed(
      rwkvmobile_runtime_t runtime,
      int model_id,
      ) {
    return _rwkvmobile_runtime_get_avg_decode_speed(
      runtime,
      model_id,
    );
  }

  late final _rwkvmobile_runtime_get_avg_decode_speedPtr = _lookup<ffi.NativeFunction<ffi.Double Function(rwkvmobile_runtime_t, ffi.Int)>>(
    'rwkvmobile_runtime_get_avg_decode_speed',
  );
  late final _rwkvmobile_runtime_get_avg_decode_speed = _rwkvmobile_runtime_get_avg_decode_speedPtr
      .asFunction<double Function(rwkvmobile_runtime_t, int)>();

  double rwkvmobile_runtime_get_avg_prefill_speed(
      rwkvmobile_runtime_t runtime,
      int model_id,
      ) {
    return _rwkvmobile_runtime_get_avg_prefill_speed(
      runtime,
      model_id,
    );
  }

  late final _rwkvmobile_runtime_get_avg_prefill_speedPtr = _lookup<ffi.NativeFunction<ffi.Double Function(rwkvmobile_runtime_t, ffi.Int)>>(
    'rwkvmobile_runtime_get_avg_prefill_speed',
  );
  late final _rwkvmobile_runtime_get_avg_prefill_speed = _rwkvmobile_runtime_get_avg_prefill_speedPtr
      .asFunction<double Function(rwkvmobile_runtime_t, int)>();

  evaluation_results rwkvmobile_runtime_run_evaluation(
      rwkvmobile_runtime_t runtime,
      int model_id,
      ffi.Pointer<ffi.Char> source_text,
      ffi.Pointer<ffi.Char> target_text,
      ) {
    return _rwkvmobile_runtime_run_evaluation(
      runtime,
      model_id,
      source_text,
      target_text,
    );
  }

  late final _rwkvmobile_runtime_run_evaluationPtr =
  _lookup<ffi.NativeFunction<evaluation_results Function(rwkvmobile_runtime_t, ffi.Int, ffi.Pointer<ffi.Char>, ffi.Pointer<ffi.Char>)>>(
    'rwkvmobile_runtime_run_evaluation',
  );
  late final _rwkvmobile_runtime_run_evaluation = _rwkvmobile_runtime_run_evaluationPtr
      .asFunction<evaluation_results Function(rwkvmobile_runtime_t, int, ffi.Pointer<ffi.Char>, ffi.Pointer<ffi.Char>)>();

  void rwkvmobile_runtime_free_evaluation_results(
      evaluation_results results,
      ) {
    return _rwkvmobile_runtime_free_evaluation_results(
      results,
    );
  }

  late final _rwkvmobile_runtime_free_evaluation_resultsPtr = _lookup<ffi.NativeFunction<ffi.Void Function(evaluation_results)>>(
    'rwkvmobile_runtime_free_evaluation_results',
  );
  late final _rwkvmobile_runtime_free_evaluation_results = _rwkvmobile_runtime_free_evaluation_resultsPtr
      .asFunction<void Function(evaluation_results)>();

  int rwkvmobile_runtime_load_vision_encoder(
      rwkvmobile_runtime_t runtime,
      int model_id,
      ffi.Pointer<ffi.Char> encoder_path,
      ) {
    return _rwkvmobile_runtime_load_vision_encoder(
      runtime,
      model_id,
      encoder_path,
    );
  }

  late final _rwkvmobile_runtime_load_vision_encoderPtr =
  _lookup<ffi.NativeFunction<ffi.Int Function(rwkvmobile_runtime_t, ffi.Int, ffi.Pointer<ffi.Char>)>>(
    'rwkvmobile_runtime_load_vision_encoder',
  );
  late final _rwkvmobile_runtime_load_vision_encoder = _rwkvmobile_runtime_load_vision_encoderPtr
      .asFunction<int Function(rwkvmobile_runtime_t, int, ffi.Pointer<ffi.Char>)>();

  int rwkvmobile_runtime_load_vision_encoder_and_adapter(
      rwkvmobile_runtime_t runtime,
      int model_id,
      ffi.Pointer<ffi.Char> encoder_path,
      ffi.Pointer<ffi.Char> adapter_path,
      ) {
    return _rwkvmobile_runtime_load_vision_encoder_and_adapter(
      runtime,
      model_id,
      encoder_path,
      adapter_path,
    );
  }

  late final _rwkvmobile_runtime_load_vision_encoder_and_adapterPtr =
  _lookup<ffi.NativeFunction<ffi.Int Function(rwkvmobile_runtime_t, ffi.Int, ffi.Pointer<ffi.Char>, ffi.Pointer<ffi.Char>)>>(
    'rwkvmobile_runtime_load_vision_encoder_and_adapter',
  );
  late final _rwkvmobile_runtime_load_vision_encoder_and_adapter = _rwkvmobile_runtime_load_vision_encoder_and_adapterPtr
      .asFunction<int Function(rwkvmobile_runtime_t, int, ffi.Pointer<ffi.Char>, ffi.Pointer<ffi.Char>)>();

  int rwkvmobile_runtime_release_vision_encoder(
      rwkvmobile_runtime_t runtime,
      int model_id,
      ) {
    return _rwkvmobile_runtime_release_vision_encoder(
      runtime,
      model_id,
    );
  }

  late final _rwkvmobile_runtime_release_vision_encoderPtr = _lookup<ffi.NativeFunction<ffi.Int Function(rwkvmobile_runtime_t, ffi.Int)>>(
    'rwkvmobile_runtime_release_vision_encoder',
  );
  late final _rwkvmobile_runtime_release_vision_encoder = _rwkvmobile_runtime_release_vision_encoderPtr
      .asFunction<int Function(rwkvmobile_runtime_t, int)>();

  int rwkvmobile_runtime_set_image_unique_identifier(
      rwkvmobile_runtime_t runtime,
      ffi.Pointer<ffi.Char> unique_identifier,
      ) {
    return _rwkvmobile_runtime_set_image_unique_identifier(
      runtime,
      unique_identifier,
    );
  }

  late final _rwkvmobile_runtime_set_image_unique_identifierPtr =
  _lookup<ffi.NativeFunction<ffi.Int Function(rwkvmobile_runtime_t, ffi.Pointer<ffi.Char>)>>(
    'rwkvmobile_runtime_set_image_unique_identifier',
  );
  late final _rwkvmobile_runtime_set_image_unique_identifier = _rwkvmobile_runtime_set_image_unique_identifierPtr
      .asFunction<int Function(rwkvmobile_runtime_t, ffi.Pointer<ffi.Char>)>();

  int rwkvmobile_runtime_load_whisper_encoder(
      rwkvmobile_runtime_t runtime,
      int model_id,
      ffi.Pointer<ffi.Char> encoder_path,
      ) {
    return _rwkvmobile_runtime_load_whisper_encoder(
      runtime,
      model_id,
      encoder_path,
    );
  }

  late final _rwkvmobile_runtime_load_whisper_encoderPtr =
  _lookup<ffi.NativeFunction<ffi.Int Function(rwkvmobile_runtime_t, ffi.Int, ffi.Pointer<ffi.Char>)>>(
    'rwkvmobile_runtime_load_whisper_encoder',
  );
  late final _rwkvmobile_runtime_load_whisper_encoder = _rwkvmobile_runtime_load_whisper_encoderPtr
      .asFunction<int Function(rwkvmobile_runtime_t, int, ffi.Pointer<ffi.Char>)>();

  int rwkvmobile_runtime_release_whisper_encoder(
      rwkvmobile_runtime_t runtime,
      int model_id,
      ) {
    return _rwkvmobile_runtime_release_whisper_encoder(
      runtime,
      model_id,
    );
  }

  late final _rwkvmobile_runtime_release_whisper_encoderPtr = _lookup<ffi.NativeFunction<ffi.Int Function(rwkvmobile_runtime_t, ffi.Int)>>(
    'rwkvmobile_runtime_release_whisper_encoder',
  );
  late final _rwkvmobile_runtime_release_whisper_encoder = _rwkvmobile_runtime_release_whisper_encoderPtr
      .asFunction<int Function(rwkvmobile_runtime_t, int)>();

  int rwkvmobile_runtime_set_audio_prompt(
      rwkvmobile_runtime_t runtime,
      int model_id,
      ffi.Pointer<ffi.Char> audio_path,
      ) {
    return _rwkvmobile_runtime_set_audio_prompt(
      runtime,
      model_id,
      audio_path,
    );
  }

  late final _rwkvmobile_runtime_set_audio_promptPtr =
  _lookup<ffi.NativeFunction<ffi.Int Function(rwkvmobile_runtime_t, ffi.Int, ffi.Pointer<ffi.Char>)>>(
    'rwkvmobile_runtime_set_audio_prompt',
  );
  late final _rwkvmobile_runtime_set_audio_prompt = _rwkvmobile_runtime_set_audio_promptPtr
      .asFunction<int Function(rwkvmobile_runtime_t, int, ffi.Pointer<ffi.Char>)>();

  int rwkvmobile_runtime_set_token_banned(
      rwkvmobile_runtime_t runtime,
      int model_id,
      ffi.Pointer<ffi.Int> token_banned,
      int token_banned_len,
      ) {
    return _rwkvmobile_runtime_set_token_banned(
      runtime,
      model_id,
      token_banned,
      token_banned_len,
    );
  }

  late final _rwkvmobile_runtime_set_token_bannedPtr =
  _lookup<ffi.NativeFunction<ffi.Int Function(rwkvmobile_runtime_t, ffi.Int, ffi.Pointer<ffi.Int>, ffi.Int)>>(
    'rwkvmobile_runtime_set_token_banned',
  );
  late final _rwkvmobile_runtime_set_token_banned = _rwkvmobile_runtime_set_token_bannedPtr
      .asFunction<int Function(rwkvmobile_runtime_t, int, ffi.Pointer<ffi.Int>, int)>();

  int rwkvmobile_runtime_set_eos_token(
      rwkvmobile_runtime_t runtime,
      int model_id,
      ffi.Pointer<ffi.Char> eos_token,
      ) {
    return _rwkvmobile_runtime_set_eos_token(
      runtime,
      model_id,
      eos_token,
    );
  }

  late final _rwkvmobile_runtime_set_eos_tokenPtr =
  _lookup<ffi.NativeFunction<ffi.Int Function(rwkvmobile_runtime_t, ffi.Int, ffi.Pointer<ffi.Char>)>>(
    'rwkvmobile_runtime_set_eos_token',
  );
  late final _rwkvmobile_runtime_set_eos_token = _rwkvmobile_runtime_set_eos_tokenPtr
      .asFunction<int Function(rwkvmobile_runtime_t, int, ffi.Pointer<ffi.Char>)>();

  int rwkvmobile_runtime_set_bos_token(
      rwkvmobile_runtime_t runtime,
      int model_id,
      ffi.Pointer<ffi.Char> bos_token,
      ) {
    return _rwkvmobile_runtime_set_bos_token(
      runtime,
      model_id,
      bos_token,
    );
  }

  late final _rwkvmobile_runtime_set_bos_tokenPtr =
  _lookup<ffi.NativeFunction<ffi.Int Function(rwkvmobile_runtime_t, ffi.Int, ffi.Pointer<ffi.Char>)>>(
    'rwkvmobile_runtime_set_bos_token',
  );
  late final _rwkvmobile_runtime_set_bos_token = _rwkvmobile_runtime_set_bos_tokenPtr
      .asFunction<int Function(rwkvmobile_runtime_t, int, ffi.Pointer<ffi.Char>)>();

  int rwkvmobile_runtime_set_user_role(
      rwkvmobile_runtime_t runtime,
      int model_id,
      ffi.Pointer<ffi.Char> user_role,
      ) {
    return _rwkvmobile_runtime_set_user_role(
      runtime,
      model_id,
      user_role,
    );
  }

  late final _rwkvmobile_runtime_set_user_rolePtr =
  _lookup<ffi.NativeFunction<ffi.Int Function(rwkvmobile_runtime_t, ffi.Int, ffi.Pointer<ffi.Char>)>>(
    'rwkvmobile_runtime_set_user_role',
  );
  late final _rwkvmobile_runtime_set_user_role = _rwkvmobile_runtime_set_user_rolePtr
      .asFunction<int Function(rwkvmobile_runtime_t, int, ffi.Pointer<ffi.Char>)>();

  int rwkvmobile_runtime_set_response_role(
      rwkvmobile_runtime_t runtime,
      int model_id,
      ffi.Pointer<ffi.Char> response_role,
      ) {
    return _rwkvmobile_runtime_set_response_role(
      runtime,
      model_id,
      response_role,
    );
  }

  late final _rwkvmobile_runtime_set_response_rolePtr =
  _lookup<ffi.NativeFunction<ffi.Int Function(rwkvmobile_runtime_t, ffi.Int, ffi.Pointer<ffi.Char>)>>(
    'rwkvmobile_runtime_set_response_role',
  );
  late final _rwkvmobile_runtime_set_response_role = _rwkvmobile_runtime_set_response_rolePtr
      .asFunction<int Function(rwkvmobile_runtime_t, int, ffi.Pointer<ffi.Char>)>();

  int rwkvmobile_runtime_set_thinking_token(
      rwkvmobile_runtime_t runtime,
      int model_id,
      ffi.Pointer<ffi.Char> thinking_token,
      ) {
    return _rwkvmobile_runtime_set_thinking_token(
      runtime,
      model_id,
      thinking_token,
    );
  }

  late final _rwkvmobile_runtime_set_thinking_tokenPtr =
  _lookup<ffi.NativeFunction<ffi.Int Function(rwkvmobile_runtime_t, ffi.Int, ffi.Pointer<ffi.Char>)>>(
    'rwkvmobile_runtime_set_thinking_token',
  );
  late final _rwkvmobile_runtime_set_thinking_token = _rwkvmobile_runtime_set_thinking_tokenPtr
      .asFunction<int Function(rwkvmobile_runtime_t, int, ffi.Pointer<ffi.Char>)>();

  response_buffer rwkvmobile_runtime_get_response_buffer_content(
      rwkvmobile_runtime_t runtime,
      int model_id,
      ) {
    return _rwkvmobile_runtime_get_response_buffer_content(
      runtime,
      model_id,
    );
  }

  late final _rwkvmobile_runtime_get_response_buffer_contentPtr =
  _lookup<ffi.NativeFunction<response_buffer Function(rwkvmobile_runtime_t, ffi.Int)>>(
    'rwkvmobile_runtime_get_response_buffer_content',
  );
  late final _rwkvmobile_runtime_get_response_buffer_content = _rwkvmobile_runtime_get_response_buffer_contentPtr
      .asFunction<response_buffer Function(rwkvmobile_runtime_t, int)>();

  response_buffer_batch rwkvmobile_runtime_get_response_buffer_content_batch(
      rwkvmobile_runtime_t runtime,
      int model_id,
      ) {
    return _rwkvmobile_runtime_get_response_buffer_content_batch(
      runtime,
      model_id,
    );
  }

  late final _rwkvmobile_runtime_get_response_buffer_content_batchPtr =
  _lookup<ffi.NativeFunction<response_buffer_batch Function(rwkvmobile_runtime_t, ffi.Int)>>(
    'rwkvmobile_runtime_get_response_buffer_content_batch',
  );
  late final _rwkvmobile_runtime_get_response_buffer_content_batch = _rwkvmobile_runtime_get_response_buffer_content_batchPtr
      .asFunction<response_buffer_batch Function(rwkvmobile_runtime_t, int)>();

  void rwkvmobile_runtime_free_response_buffer(
      response_buffer buffer,
      ) {
    return _rwkvmobile_runtime_free_response_buffer(
      buffer,
    );
  }

  late final _rwkvmobile_runtime_free_response_bufferPtr = _lookup<ffi.NativeFunction<ffi.Void Function(response_buffer)>>(
    'rwkvmobile_runtime_free_response_buffer',
  );
  late final _rwkvmobile_runtime_free_response_buffer = _rwkvmobile_runtime_free_response_bufferPtr
      .asFunction<void Function(response_buffer)>();

  void rwkvmobile_runtime_free_response_buffer_batch(
      response_buffer_batch buffer,
      ) {
    return _rwkvmobile_runtime_free_response_buffer_batch(
      buffer,
    );
  }

  late final _rwkvmobile_runtime_free_response_buffer_batchPtr = _lookup<ffi.NativeFunction<ffi.Void Function(response_buffer_batch)>>(
    'rwkvmobile_runtime_free_response_buffer_batch',
  );
  late final _rwkvmobile_runtime_free_response_buffer_batch = _rwkvmobile_runtime_free_response_buffer_batchPtr
      .asFunction<void Function(response_buffer_batch)>();

  token_ids rwkvmobile_runtime_get_response_buffer_ids(
      rwkvmobile_runtime_t runtime,
      int model_id,
      ) {
    return _rwkvmobile_runtime_get_response_buffer_ids(
      runtime,
      model_id,
    );
  }

  late final _rwkvmobile_runtime_get_response_buffer_idsPtr =
  _lookup<ffi.NativeFunction<token_ids Function(rwkvmobile_runtime_t, ffi.Int)>>('rwkvmobile_runtime_get_response_buffer_ids');
  late final _rwkvmobile_runtime_get_response_buffer_ids = _rwkvmobile_runtime_get_response_buffer_idsPtr
      .asFunction<token_ids Function(rwkvmobile_runtime_t, int)>();

  void rwkvmobile_runtime_free_token_ids(
      token_ids ids,
      ) {
    return _rwkvmobile_runtime_free_token_ids(
      ids,
    );
  }

  late final _rwkvmobile_runtime_free_token_idsPtr = _lookup<ffi.NativeFunction<ffi.Void Function(token_ids)>>(
    'rwkvmobile_runtime_free_token_ids',
  );
  late final _rwkvmobile_runtime_free_token_ids = _rwkvmobile_runtime_free_token_idsPtr.asFunction<void Function(token_ids)>();

  int rwkvmobile_runtime_sparktts_load_models(
      rwkvmobile_runtime_t runtime,
      ffi.Pointer<ffi.Char> wav2vec2_path,
      ffi.Pointer<ffi.Char> bicodec_tokenizer_path,
      ffi.Pointer<ffi.Char> bicodec_detokenizer_path,
      ) {
    return _rwkvmobile_runtime_sparktts_load_models(
      runtime,
      wav2vec2_path,
      bicodec_tokenizer_path,
      bicodec_detokenizer_path,
    );
  }

  late final _rwkvmobile_runtime_sparktts_load_modelsPtr =
  _lookup<
      ffi.NativeFunction<ffi.Int Function(rwkvmobile_runtime_t, ffi.Pointer<ffi.Char>, ffi.Pointer<ffi.Char>, ffi.Pointer<ffi.Char>)>
  >('rwkvmobile_runtime_sparktts_load_models');
  late final _rwkvmobile_runtime_sparktts_load_models = _rwkvmobile_runtime_sparktts_load_modelsPtr
      .asFunction<int Function(rwkvmobile_runtime_t, ffi.Pointer<ffi.Char>, ffi.Pointer<ffi.Char>, ffi.Pointer<ffi.Char>)>();

  int rwkvmobile_runtime_sparktts_release_models(
      rwkvmobile_runtime_t runtime,
      ) {
    return _rwkvmobile_runtime_sparktts_release_models(
      runtime,
    );
  }

  late final _rwkvmobile_runtime_sparktts_release_modelsPtr = _lookup<ffi.NativeFunction<ffi.Int Function(rwkvmobile_runtime_t)>>(
    'rwkvmobile_runtime_sparktts_release_models',
  );
  late final _rwkvmobile_runtime_sparktts_release_models = _rwkvmobile_runtime_sparktts_release_modelsPtr
      .asFunction<int Function(rwkvmobile_runtime_t)>();

  int rwkvmobile_runtime_run_spark_tts_streaming_async(
      rwkvmobile_runtime_t runtime,
      int model_id,
      ffi.Pointer<ffi.Char> tts_text,
      ffi.Pointer<ffi.Char> prompt_audio_text,
      ffi.Pointer<ffi.Char> prompt_audio_path,
      ffi.Pointer<ffi.Char> output_wav_path,
      ) {
    return _rwkvmobile_runtime_run_spark_tts_streaming_async(
      runtime,
      model_id,
      tts_text,
      prompt_audio_text,
      prompt_audio_path,
      output_wav_path,
    );
  }

  late final _rwkvmobile_runtime_run_spark_tts_streaming_asyncPtr =
  _lookup<
      ffi.NativeFunction<
          ffi.Int Function(
              rwkvmobile_runtime_t,
              ffi.Int,
              ffi.Pointer<ffi.Char>,
              ffi.Pointer<ffi.Char>,
              ffi.Pointer<ffi.Char>,
              ffi.Pointer<ffi.Char>,
              )
      >
  >('rwkvmobile_runtime_run_spark_tts_streaming_async');
  late final _rwkvmobile_runtime_run_spark_tts_streaming_async = _rwkvmobile_runtime_run_spark_tts_streaming_asyncPtr
      .asFunction<
      int Function(rwkvmobile_runtime_t, int, ffi.Pointer<ffi.Char>, ffi.Pointer<ffi.Char>, ffi.Pointer<ffi.Char>, ffi.Pointer<ffi.Char>)
  >();

  int rwkvmobile_runtime_run_spark_tts_with_global_tokens_streaming_async(
      rwkvmobile_runtime_t runtime,
      int model_id,
      ffi.Pointer<ffi.Char> tts_text,
      ffi.Pointer<ffi.Char> output_wav_path,
      ffi.Pointer<ffi.Int> global_tokens,
      ) {
    return _rwkvmobile_runtime_run_spark_tts_with_global_tokens_streaming_async(
      runtime,
      model_id,
      tts_text,
      output_wav_path,
      global_tokens,
    );
  }

  late final _rwkvmobile_runtime_run_spark_tts_with_global_tokens_streaming_asyncPtr =
  _lookup<
      ffi.NativeFunction<
          ffi.Int Function(rwkvmobile_runtime_t, ffi.Int, ffi.Pointer<ffi.Char>, ffi.Pointer<ffi.Char>, ffi.Pointer<ffi.Int>)
      >
  >('rwkvmobile_runtime_run_spark_tts_with_global_tokens_streaming_async');
  late final _rwkvmobile_runtime_run_spark_tts_with_global_tokens_streaming_async =
  _rwkvmobile_runtime_run_spark_tts_with_global_tokens_streaming_asyncPtr
      .asFunction<int Function(rwkvmobile_runtime_t, int, ffi.Pointer<ffi.Char>, ffi.Pointer<ffi.Char>, ffi.Pointer<ffi.Int>)>();

  int rwkvmobile_runtime_run_spark_tts_with_properties_streaming_async(
      rwkvmobile_runtime_t runtime,
      int model_id,
      ffi.Pointer<ffi.Char> tts_text,
      ffi.Pointer<ffi.Char> output_wav_path,
      ffi.Pointer<ffi.Char> age,
      ffi.Pointer<ffi.Char> gender,
      ffi.Pointer<ffi.Char> emotion,
      ffi.Pointer<ffi.Char> pitch,
      ffi.Pointer<ffi.Char> speed,
      ) {
    return _rwkvmobile_runtime_run_spark_tts_with_properties_streaming_async(
      runtime,
      model_id,
      tts_text,
      output_wav_path,
      age,
      gender,
      emotion,
      pitch,
      speed,
    );
  }

  late final _rwkvmobile_runtime_run_spark_tts_with_properties_streaming_asyncPtr =
  _lookup<
      ffi.NativeFunction<
          ffi.Int Function(
              rwkvmobile_runtime_t,
              ffi.Int,
              ffi.Pointer<ffi.Char>,
              ffi.Pointer<ffi.Char>,
              ffi.Pointer<ffi.Char>,
              ffi.Pointer<ffi.Char>,
              ffi.Pointer<ffi.Char>,
              ffi.Pointer<ffi.Char>,
              ffi.Pointer<ffi.Char>,
              )
      >
  >('rwkvmobile_runtime_run_spark_tts_with_properties_streaming_async');
  late final _rwkvmobile_runtime_run_spark_tts_with_properties_streaming_async =
  _rwkvmobile_runtime_run_spark_tts_with_properties_streaming_asyncPtr
      .asFunction<
      int Function(
          rwkvmobile_runtime_t,
          int,
          ffi.Pointer<ffi.Char>,
          ffi.Pointer<ffi.Char>,
          ffi.Pointer<ffi.Char>,
          ffi.Pointer<ffi.Char>,
          ffi.Pointer<ffi.Char>,
          ffi.Pointer<ffi.Char>,
          ffi.Pointer<ffi.Char>,
          )
  >();

  tts_streaming_buffer rwkvmobile_runtime_get_tts_streaming_buffer(
      rwkvmobile_runtime_t runtime,
      ) {
    return _rwkvmobile_runtime_get_tts_streaming_buffer(
      runtime,
    );
  }

  late final _rwkvmobile_runtime_get_tts_streaming_bufferPtr =
  _lookup<ffi.NativeFunction<tts_streaming_buffer Function(rwkvmobile_runtime_t)>>('rwkvmobile_runtime_get_tts_streaming_buffer');
  late final _rwkvmobile_runtime_get_tts_streaming_buffer = _rwkvmobile_runtime_get_tts_streaming_bufferPtr
      .asFunction<tts_streaming_buffer Function(rwkvmobile_runtime_t)>();

  int rwkvmobile_runtime_get_tts_streaming_buffer_length(
      rwkvmobile_runtime_t runtime,
      ) {
    return _rwkvmobile_runtime_get_tts_streaming_buffer_length(
      runtime,
    );
  }

  late final _rwkvmobile_runtime_get_tts_streaming_buffer_lengthPtr = _lookup<ffi.NativeFunction<ffi.Int Function(rwkvmobile_runtime_t)>>(
    'rwkvmobile_runtime_get_tts_streaming_buffer_length',
  );
  late final _rwkvmobile_runtime_get_tts_streaming_buffer_length = _rwkvmobile_runtime_get_tts_streaming_buffer_lengthPtr
      .asFunction<int Function(rwkvmobile_runtime_t)>();

  void rwkvmobile_runtime_free_tts_streaming_buffer(
      tts_streaming_buffer buffer,
      ) {
    return _rwkvmobile_runtime_free_tts_streaming_buffer(
      buffer,
    );
  }

  late final _rwkvmobile_runtime_free_tts_streaming_bufferPtr = _lookup<ffi.NativeFunction<ffi.Void Function(tts_streaming_buffer)>>(
    'rwkvmobile_runtime_free_tts_streaming_buffer',
  );
  late final _rwkvmobile_runtime_free_tts_streaming_buffer = _rwkvmobile_runtime_free_tts_streaming_bufferPtr
      .asFunction<void Function(tts_streaming_buffer)>();

  ffi.Pointer<ffi.Int> rwkvmobile_runtime_get_tts_global_tokens_output(
      rwkvmobile_runtime_t runtime,
      ) {
    return _rwkvmobile_runtime_get_tts_global_tokens_output(
      runtime,
    );
  }

  late final _rwkvmobile_runtime_get_tts_global_tokens_outputPtr =
  _lookup<ffi.NativeFunction<ffi.Pointer<ffi.Int> Function(rwkvmobile_runtime_t)>>('rwkvmobile_runtime_get_tts_global_tokens_output');
  late final _rwkvmobile_runtime_get_tts_global_tokens_output = _rwkvmobile_runtime_get_tts_global_tokens_outputPtr
      .asFunction<ffi.Pointer<ffi.Int> Function(rwkvmobile_runtime_t)>();

  int rwkvmobile_runtime_tts_register_text_normalizer(
      rwkvmobile_runtime_t runtime,
      ffi.Pointer<ffi.Char> path,
      ) {
    return _rwkvmobile_runtime_tts_register_text_normalizer(
      runtime,
      path,
    );
  }

  late final _rwkvmobile_runtime_tts_register_text_normalizerPtr =
  _lookup<ffi.NativeFunction<ffi.Int Function(rwkvmobile_runtime_t, ffi.Pointer<ffi.Char>)>>(
    'rwkvmobile_runtime_tts_register_text_normalizer',
  );
  late final _rwkvmobile_runtime_tts_register_text_normalizer = _rwkvmobile_runtime_tts_register_text_normalizerPtr
      .asFunction<int Function(rwkvmobile_runtime_t, ffi.Pointer<ffi.Char>)>();

  double rwkvmobile_runtime_get_prefill_progress(
      rwkvmobile_runtime_t runtime,
      int model_id,
      ) {
    return _rwkvmobile_runtime_get_prefill_progress(
      runtime,
      model_id,
    );
  }

  late final _rwkvmobile_runtime_get_prefill_progressPtr = _lookup<ffi.NativeFunction<ffi.Float Function(rwkvmobile_runtime_t, ffi.Int)>>(
    'rwkvmobile_runtime_get_prefill_progress',
  );
  late final _rwkvmobile_runtime_get_prefill_progress = _rwkvmobile_runtime_get_prefill_progressPtr
      .asFunction<double Function(rwkvmobile_runtime_t, int)>();

  int rwkvmobile_load_embedding_model(
      rwkvmobile_runtime_t runtime,
      ffi.Pointer<ffi.Char> model_path,
      ) {
    return _rwkvmobile_load_embedding_model(
      runtime,
      model_path,
    );
  }

  late final _rwkvmobile_load_embedding_modelPtr =
  _lookup<ffi.NativeFunction<ffi.Int Function(rwkvmobile_runtime_t, ffi.Pointer<ffi.Char>)>>('rwkvmobile_load_embedding_model');
  late final _rwkvmobile_load_embedding_model = _rwkvmobile_load_embedding_modelPtr
      .asFunction<int Function(rwkvmobile_runtime_t, ffi.Pointer<ffi.Char>)>();

  int rwkvmobile_load_rerank_model(
      rwkvmobile_runtime_t runtime,
      ffi.Pointer<ffi.Char> model_path,
      ) {
    return _rwkvmobile_load_rerank_model(
      runtime,
      model_path,
    );
  }

  late final _rwkvmobile_load_rerank_modelPtr = _lookup<ffi.NativeFunction<ffi.Int Function(rwkvmobile_runtime_t, ffi.Pointer<ffi.Char>)>>(
    'rwkvmobile_load_rerank_model',
  );
  late final _rwkvmobile_load_rerank_model = _rwkvmobile_load_rerank_modelPtr
      .asFunction<int Function(rwkvmobile_runtime_t, ffi.Pointer<ffi.Char>)>();

  int rwkvmobile_get_embedding(
      rwkvmobile_runtime_t runtime,
      ffi.Pointer<ffi.Pointer<ffi.Char>> input,
      int input_length,
      ffi.Pointer<ffi.Pointer<ffi.Float>> embedding,
      ) {
    return _rwkvmobile_get_embedding(
      runtime,
      input,
      input_length,
      embedding,
    );
  }

  late final _rwkvmobile_get_embeddingPtr =
  _lookup<
      ffi.NativeFunction<
          ffi.Int Function(rwkvmobile_runtime_t, ffi.Pointer<ffi.Pointer<ffi.Char>>, ffi.Int, ffi.Pointer<ffi.Pointer<ffi.Float>>)
      >
  >('rwkvmobile_get_embedding');
  late final _rwkvmobile_get_embedding = _rwkvmobile_get_embeddingPtr
      .asFunction<int Function(rwkvmobile_runtime_t, ffi.Pointer<ffi.Pointer<ffi.Char>>, int, ffi.Pointer<ffi.Pointer<ffi.Float>>)>();

  ffi.Pointer<ffi.Char> rwkvmobile_get_platform_name() {
    return _rwkvmobile_get_platform_name();
  }

  late final _rwkvmobile_get_platform_namePtr = _lookup<ffi.NativeFunction<ffi.Pointer<ffi.Char> Function()>>(
    'rwkvmobile_get_platform_name',
  );
  late final _rwkvmobile_get_platform_name = _rwkvmobile_get_platform_namePtr.asFunction<ffi.Pointer<ffi.Char> Function()>();

  ffi.Pointer<ffi.Char> rwkvmobile_get_soc_name() {
    return _rwkvmobile_get_soc_name();
  }

  late final _rwkvmobile_get_soc_namePtr = _lookup<ffi.NativeFunction<ffi.Pointer<ffi.Char> Function()>>('rwkvmobile_get_soc_name');
  late final _rwkvmobile_get_soc_name = _rwkvmobile_get_soc_namePtr.asFunction<ffi.Pointer<ffi.Char> Function()>();

  ffi.Pointer<ffi.Char> rwkvmobile_get_soc_partname() {
    return _rwkvmobile_get_soc_partname();
  }

  late final _rwkvmobile_get_soc_partnamePtr = _lookup<ffi.NativeFunction<ffi.Pointer<ffi.Char> Function()>>('rwkvmobile_get_soc_partname');
  late final _rwkvmobile_get_soc_partname = _rwkvmobile_get_soc_partnamePtr.asFunction<ffi.Pointer<ffi.Char> Function()>();

  ffi.Pointer<ffi.Char> rwkvmobile_get_htp_arch() {
    return _rwkvmobile_get_htp_arch();
  }

  late final _rwkvmobile_get_htp_archPtr = _lookup<ffi.NativeFunction<ffi.Pointer<ffi.Char> Function()>>('rwkvmobile_get_htp_arch');
  late final _rwkvmobile_get_htp_arch = _rwkvmobile_get_htp_archPtr.asFunction<ffi.Pointer<ffi.Char> Function()>();

  ffi.Pointer<ffi.Char> rwkvmobile_dump_log() {
    return _rwkvmobile_dump_log();
  }

  late final _rwkvmobile_dump_logPtr = _lookup<ffi.NativeFunction<ffi.Pointer<ffi.Char> Function()>>('rwkvmobile_dump_log');
  late final _rwkvmobile_dump_log = _rwkvmobile_dump_logPtr.asFunction<ffi.Pointer<ffi.Char> Function()>();

  ffi.Pointer<ffi.Char> rwkvmobile_get_state_cache_info(
      rwkvmobile_runtime_t runtime,
      int model_id,
      ) {
    return _rwkvmobile_get_state_cache_info(
      runtime,
      model_id,
    );
  }

  late final _rwkvmobile_get_state_cache_infoPtr =
  _lookup<ffi.NativeFunction<ffi.Pointer<ffi.Char> Function(rwkvmobile_runtime_t, ffi.Int)>>('rwkvmobile_get_state_cache_info');
  late final _rwkvmobile_get_state_cache_info = _rwkvmobile_get_state_cache_infoPtr
      .asFunction<ffi.Pointer<ffi.Char> Function(rwkvmobile_runtime_t, int)>();

  void rwkvmobile_free_state_cache_info(
      ffi.Pointer<ffi.Char> state_cache_info,
      ) {
    return _rwkvmobile_free_state_cache_info(
      state_cache_info,
    );
  }

  late final _rwkvmobile_free_state_cache_infoPtr = _lookup<ffi.NativeFunction<ffi.Void Function(ffi.Pointer<ffi.Char>)>>(
    'rwkvmobile_free_state_cache_info',
  );
  late final _rwkvmobile_free_state_cache_info = _rwkvmobile_free_state_cache_infoPtr.asFunction<void Function(ffi.Pointer<ffi.Char>)>();

  void rwkvmobile_set_loglevel(
      int loglevel,
      ) {
    return _rwkvmobile_set_loglevel(
      loglevel,
    );
  }

  late final _rwkvmobile_set_loglevelPtr = _lookup<ffi.NativeFunction<ffi.Void Function(ffi.Int)>>('rwkvmobile_set_loglevel');
  late final _rwkvmobile_set_loglevel = _rwkvmobile_set_loglevelPtr.asFunction<void Function(int)>();

  void rwkvmobile_set_cache_dir(
      rwkvmobile_runtime_t runtime,
      ffi.Pointer<ffi.Char> cache_dir,
      ) {
    return _rwkvmobile_set_cache_dir(
      runtime,
      cache_dir,
    );
  }

  late final _rwkvmobile_set_cache_dirPtr = _lookup<ffi.NativeFunction<ffi.Void Function(rwkvmobile_runtime_t, ffi.Pointer<ffi.Char>)>>(
    'rwkvmobile_set_cache_dir',
  );
  late final _rwkvmobile_set_cache_dir = _rwkvmobile_set_cache_dirPtr
      .asFunction<void Function(rwkvmobile_runtime_t, ffi.Pointer<ffi.Char>)>();

  int rwkvmobile_runtime_get_loaded_model_ids(
      rwkvmobile_runtime_t runtime,
      ffi.Pointer<ffi.Int> model_ids,
      int max_count,
      ) {
    return _rwkvmobile_runtime_get_loaded_model_ids(
      runtime,
      model_ids,
      max_count,
    );
  }

  late final _rwkvmobile_runtime_get_loaded_model_idsPtr =
  _lookup<ffi.NativeFunction<ffi.Int Function(rwkvmobile_runtime_t, ffi.Pointer<ffi.Int>, ffi.Int)>>(
    'rwkvmobile_runtime_get_loaded_model_ids',
  );
  late final _rwkvmobile_runtime_get_loaded_model_ids = _rwkvmobile_runtime_get_loaded_model_idsPtr
      .asFunction<int Function(rwkvmobile_runtime_t, ffi.Pointer<ffi.Int>, int)>();

  loaded_models_list rwkvmobile_runtime_get_loaded_models_info(
      rwkvmobile_runtime_t runtime,
      ) {
    return _rwkvmobile_runtime_get_loaded_models_info(
      runtime,
    );
  }

  late final _rwkvmobile_runtime_get_loaded_models_infoPtr = _lookup<ffi.NativeFunction<loaded_models_list Function(rwkvmobile_runtime_t)>>(
    'rwkvmobile_runtime_get_loaded_models_info',
  );
  late final _rwkvmobile_runtime_get_loaded_models_info = _rwkvmobile_runtime_get_loaded_models_infoPtr
      .asFunction<loaded_models_list Function(rwkvmobile_runtime_t)>();

  void rwkvmobile_runtime_free_loaded_models_list(
      loaded_models_list list,
      ) {
    return _rwkvmobile_runtime_free_loaded_models_list(
      list,
    );
  }

  late final _rwkvmobile_runtime_free_loaded_models_listPtr = _lookup<ffi.NativeFunction<ffi.Void Function(loaded_models_list)>>(
    'rwkvmobile_runtime_free_loaded_models_list',
  );
  late final _rwkvmobile_runtime_free_loaded_models_list = _rwkvmobile_runtime_free_loaded_models_listPtr
      .asFunction<void Function(loaded_models_list)>();

  ffi.Pointer<ffi.Char> rwkvmobile_runtime_get_model_path_by_id(
      rwkvmobile_runtime_t runtime,
      int model_id,
      ) {
    return _rwkvmobile_runtime_get_model_path_by_id(
      runtime,
      model_id,
    );
  }

  late final _rwkvmobile_runtime_get_model_path_by_idPtr =
  _lookup<ffi.NativeFunction<ffi.Pointer<ffi.Char> Function(rwkvmobile_runtime_t, ffi.Int)>>('rwkvmobile_runtime_get_model_path_by_id');
  late final _rwkvmobile_runtime_get_model_path_by_id = _rwkvmobile_runtime_get_model_path_by_idPtr
      .asFunction<ffi.Pointer<ffi.Char> Function(rwkvmobile_runtime_t, int)>();
}

final class sampler_params extends ffi.Struct {
  @ffi.Float()
  external double temperature;

  @ffi.Int()
  external int top_k;

  @ffi.Float()
  external double top_p;
}

final class penalty_params extends ffi.Struct {
  @ffi.Float()
  external double presence_penalty;

  @ffi.Float()
  external double frequency_penalty;

  @ffi.Float()
  external double penalty_decay;
}

final class token_ids extends ffi.Struct {
  external ffi.Pointer<ffi.Int32> ids;

  @ffi.Int()
  external int len;
}

final class response_buffer extends ffi.Struct {
  external ffi.Pointer<ffi.Char> content;

  @ffi.Int()
  external int length;

  @ffi.Int()
  external int eos_found;
}

final class response_buffer_batch extends ffi.Struct {
  external ffi.Pointer<ffi.Pointer<ffi.Char>> contents;

  external ffi.Pointer<ffi.Int> lengths;

  external ffi.Pointer<ffi.Int> eos_founds;

  @ffi.Int()
  external int batch_size;
}

final class tts_streaming_buffer extends ffi.Struct {
  external ffi.Pointer<ffi.Float> samples;

  @ffi.Int()
  external int length;
}

final class supported_batch_sizes extends ffi.Struct {
  external ffi.Pointer<ffi.Int> sizes;

  @ffi.Int()
  external int length;
}

final class model_info extends ffi.Struct {
  @ffi.Int()
  external int model_id;

  external ffi.Pointer<ffi.Char> model_path;

  external ffi.Pointer<ffi.Char> backend_name;

  external ffi.Pointer<ffi.Char> tokenizer_path;

  external ffi.Pointer<ffi.Char> user_role;

  external ffi.Pointer<ffi.Char> response_role;

  external ffi.Pointer<ffi.Char> bos_token;

  external ffi.Pointer<ffi.Char> eos_token;

  external ffi.Pointer<ffi.Char> thinking_token;

  @ffi.Int()
  external int is_generating;

  @ffi.Int()
  external int vocab_size;
}

final class loaded_models_list extends ffi.Struct {
  external ffi.Pointer<model_info> models;

  @ffi.Int()
  external int count;
}

final class evaluation_results extends ffi.Struct {
  external ffi.Pointer<ffi.Int32> corrects;

  external ffi.Pointer<ffi.Float> logits_vals;

  @ffi.Int()
  external int count;
}

typedef rwkvmobile_runtime_t = ffi.Pointer<ffi.Void>;

const int RWKV_LOG_LEVEL_DEBUG = 0;

const int RWKV_LOG_LEVEL_INFO = 1;

const int RWKV_LOG_LEVEL_WARN = 2;

const int RWKV_LOG_LEVEL_ERROR = 3;
